@page "/{BlogSlug}/post/{PostSlug}/{BlogId:guid}/{PostId:guid}"
@layout NoLayout
@inject BlogService BlogService
@inject PostService PostService

<PublicBlogHeader Title="@Blog.Title" Description="@Blog.Description">
    <NavLinks>
        <NavLink href="/" class="p-1 bg-success text-white">Back</NavLink>&nbsp;<NavLink href="/dashboard" class="p-1 bg-danger text-white">Dashboard</NavLink>
    </NavLinks>
</PublicBlogHeader>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <BadminLteShimmer ShowShimmer="@(string.IsNullOrEmpty(Post.Title))">
                <MainContent>
                    <!-- Post -->
                    <div class="post">
                        <div class="user-block">
                            <h1>
                                <a href="#">@Post.Title</a>
                            </h1>
                            <div>Created at @Post.CreatedAt</div>
                        </div>

                        <!-- /.user-block -->
                        <p>
                            @Post.Body
                        </p>

                        <p>
                            <a href="#" class="link-black text-sm mr-2"><i class="fas fa-share mr-1"></i> Share</a>
                            <a href="#" class="link-black text-sm"><i class="far fa-thumbs-up mr-1"></i> Like</a>
                            <span class="float-right">
                                <a href="#" class="link-black text-sm">
                                    <i class="far fa-comments mr-1"></i> Comments (5)
                                </a>
                            </span>
                        </p>

                        <input class="form-control form-control-sm" type="text" placeholder="Type a comment">
                    </div>
                    <!-- /.post -->
                </MainContent>
            </BadminLteShimmer>
        </div>
    </div>
</div>

<PublicBlogFooter></PublicBlogFooter>

@code {
    [Parameter] string BlogSlug { get; set; }
    [Parameter] Guid BlogId { get; set; }
    [Parameter] string PostSlug { get; set; }
    [Parameter] Guid PostId { get; set; }

    BlogDto Blog = new BlogDto();
    PostDto Post = new PostDto();

    protected override async Task OnParametersSetAsync()
    {
        await LoadDataAsync();
    }

    async Task LoadDataAsync()
    {
        var blogId = Guid.NewGuid();
        var blogResultModel = await BlogService.GetBlogInfo(blogId);
        var postResultModel = await PostService.GetPost(blogId, PostId);

        Blog = blogResultModel.Data.Blog;
        Post = postResultModel.Data.Post;
    }
}